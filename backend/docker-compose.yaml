version: '3.8'

services:
  # Service PHP-FPM avec Symfony
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: symfony_php
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    working_dir: /var/www/html
    networks:
      - symfony_network
    depends_on:
      - database
    environment:
      - DATABASE_URL=mysql://symfony:symfony@database:3306/symfony_db

  # Service Nginx
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - symfony_network

  # Service MySQL
  database:
    image: mysql:8.0
    container_name: symfony_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - symfony_network

  # Service phpMyAdmin (optionnel)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: symfony_phpmyadmin
    environment:
      PMA_HOST: database
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - database
    networks:
      - symfony_network

  # Service Node.js pour les assets (optionnel)
  node:
    image: node:18-alpine
    container_name: symfony_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: sh -c "npm install && npm run watch"
    networks:
      - symfony_network

volumes:
  mysql_data:

networks:
  symfony_network:
    driver: bridge